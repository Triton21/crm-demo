<?php

namespace AppBundle\Entity;

/**
 * CallhistoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CallhistoryRepository extends \Doctrine\ORM\EntityRepository
{
    public function findmycallhistory($name) {

        $qb = $this->createQueryBuilder('c')
                ->select('c')
                ->where('c.assign = :assign')
                ->addOrderBy('c.id')
                ->setParameters(array('assign' => $name));

        return $qb->getQuery()
                        ->getResult();
    }
    
    public function checkdeadallow($leadid, $lead) {

        $qb = $this->createQueryBuilder('c')
                ->select('count(c)')
                ->join('AppBundle.Lead', 'ts')
                ->where('c.status = :status')
                ->andWhere('ts.id = :leadid')
                ->addOrderBy('c.id')
                ->setParameters(array('leadid' => $leadid, 'status' => 'Called'));

        return $qb->getQuery()
                        ->getResult();
    }
    
    public function findmycallhistorybyid($id) {

        $qb = $this->createQueryBuilder('c')
                ->select('c')
                ->where('c.leadid = :id')
                ->addOrderBy('c.id')
                ->setParameters(array('id' => $id));

        return $qb->getQuery()
                        ->getResult();
    }
    
    public function countCallsThisMonthbyName($name, $status) {
        $thismonthdate = new \DateTime('midnight first day of this month');
        $qb = $this->createQueryBuilder('c')
                ->select('count(c)')
                ->where('c.assign = :assign', 'c.calldate > :date', 'c.status = :status')
                ->setParameters(array('assign' => $name, 'date' => $thismonthdate, 'status' => $status));

        return $qb->getQuery()
                        ->getSingleScalarResult();
    }
    
    public function countCallbyName($name, $status) {

        $qb = $this->createQueryBuilder('c')
                ->select('count(c)')
                ->where('c.assign = :assign', 'c.status = :status')
                ->setParameters(array('assign' => $name, 'status' => $status,));

        return $qb->getQuery()
                        ->getSingleScalarResult();
    }
    
    public function countCallbyStatus($status) {

        $qb = $this->createQueryBuilder('c')
                ->select('count(c)')
                ->where('c.status = :status')
                ->setParameters(array('status' => $status,));

        return $qb->getQuery()
                        ->getSingleScalarResult();
    }
    
    public function countCallbyId($id, $status) {

        $qb = $this->createQueryBuilder('c')
                ->select('count(c)')
                ->where('c.leadid = :leadid', 'c.status = :status')
                ->setParameters(array('leadid' => $id, 'status' => $status,));

        return $qb->getQuery()
                        ->getSingleScalarResult();
    }
    
}
